pipeline {
    agent any
    
    
    stages {
        stage('Checkout') { // clonando remote repo en jenkins
            steps {
                git branch: 'develop',url: 'https://github.com/espinoza6006/caseStudyMyInsuranceApp.git'
	        }
        }        
        stage('Requirements') {
            steps {
                echo 'Installing dependencies...'
                sh 'pip3 install -r requirements.txt'
                sh 'python3 project/init/init_db.py'
            }
        }
        stage('Unit/Integration tests') {
            steps {
                echo 'Unit/Integration...'
                sh 'python3 -m unittest discover -s tests/unit -v'
            }
        }        
        stage('Acceptance tests') {
            steps {
                echo 'Acceptance..'
                sh 'python3 -m unittest discover -s tests/acceptance-flask -v'
            }
        }     
        stage('Create image') {
            steps {
                echo 'creating image...'
                sh 'docker build -t hackathonimages.azurecr.io/myinsuranceappwilliams:v9 -f dockerFile .'
            } // donde azcsmyinsuranceapp.azurecr.io es el login server
            // csmyinsuranceapp:v1 es el nombre de la imagen creada en dockerhub
        } 
        stage('Publish image') {
            steps {
                echo 'pushing image...'
                withDockerRegistry([ credentialsId: "az-credentials-hackathon", url: "https://hackathonimages.azurecr.io" ]) {
                    sh 'docker push hackathonimages.azurecr.io/myinsuranceappwilliams:v9'
                }
            }
        } 
    }
    post {
        always {
            echo 'post do this always...'
        }
        success{
            echo 'post do this when success...'
        }
        failure {
            echo 'post do this when failure...'
        }
        cleanup{
            echo 'post do this when cleanup...'
            deleteDir()
        }
    }
}